diff --git a/dt_totk/lib/NintendoSDK/include/nvn/nvn_Cpp.h b/dt_totk/lib/NintendoSDK/include/nvn/nvn_Cpp.h
index abd7305..ec097a4 100755
--- a/dt_totk/lib/NintendoSDK/include/nvn/nvn_Cpp.h
+++ b/dt_totk/lib/NintendoSDK/include/nvn/nvn_Cpp.h
@@ -1538,7 +1538,7 @@ public:
 
 class VertexAttribState {
 protected:
-    char reserved[4];
+    char reserved[8];
 
 public:
     VertexAttribState& SetDefaults();
@@ -1562,7 +1562,7 @@ public:
 
 class Program {
 protected:
-    char reserved[192];
+    char reserved[128];
 
     Program(const Program&) = delete;
     const Program& operator=(const Program&) = delete;
@@ -2544,4 +2544,4 @@ typedef void (*CommandBufferSignalEventFunc)(CommandBuffer*, const Event*, Event
                                              EventSignalLocation::Enum, int, uint32_t);
 typedef void (*CommandBufferSetStencilCullCriteriaFunc)(CommandBuffer*, StencilFunc::Enum, int,
                                                         int);
-}  // namespace nvn
\ No newline at end of file
+}  // namespace nvn
diff --git a/dt_totk/lib/agl/include/lyr/aglRenderInfo.h b/dt_totk/lib/agl/include/lyr/aglRenderInfo.h
index a9c334b..ed2dffa 100755
--- a/dt_totk/lib/agl/include/lyr/aglRenderInfo.h
+++ b/dt_totk/lib/agl/include/lyr/aglRenderInfo.h
@@ -4,7 +4,7 @@
 
 namespace sead {
 
-class DirectCamera;
+class Camera;
 class Projection;
 class Viewport;
 
@@ -29,7 +29,7 @@ struct RenderInfo {
     Layer* layer;
     int _30;
     int _34;
-    sead::DirectCamera* camera;
+    sead::Camera* camera;
     sead::Projection* projection;
     sead::Viewport* viewport;
     u8 _50;
diff --git a/dt_totk/lib/sead/include/gfx/seadPrimitiveRenderer.h b/dt_totk/lib/sead/include/gfx/seadPrimitiveRenderer.h
index 0a00b99..eafd870 100755
--- a/dt_totk/lib/sead/include/gfx/seadPrimitiveRenderer.h
+++ b/dt_totk/lib/sead/include/gfx/seadPrimitiveRenderer.h
@@ -140,10 +140,11 @@ class PrimitiveRendererBase
 public:
     virtual void prepareFromBinaryImpl(Heap* heap, const void* bin_data, u32 bin_size) = 0;
     virtual void prepareImpl(Heap* heap, const SafeString& path) = 0;
+    virtual void m3() = 0;
     virtual void setCameraImpl(const Camera& camera) = 0;
     virtual void setProjectionImpl(const Projection& projection) = 0;
-    virtual void beginImpl() = 0;
-    virtual void endImpl() = 0;
+    virtual void beginImpl(DrawContext*, const Matrix34f&, const Matrix44f&) = 0;
+    virtual void endImpl(DrawContext*) = 0;
     virtual void drawQuadImpl(const Matrix34f& model_mtx, const Color4f& colorL,
                               const Color4f& colorR) = 0;
     virtual void drawQuadImpl(const Matrix34f& model_mtx, const Texture& texture,
@@ -224,6 +225,8 @@ public:
 
     void drawAxis(const Vector3f&, float);
 
+    PrimitiveDrawer* getPrimitiveDrawer() { return &mDrawer; }
+
 private:
     void doPrepare_(Heap* heap);
 
diff --git a/dt_totk/lib/sead/include/gfx/seadProjection.h b/dt_totk/lib/sead/include/gfx/seadProjection.h
index 0ccc4f2..e973110 100755
--- a/dt_totk/lib/sead/include/gfx/seadProjection.h
+++ b/dt_totk/lib/sead/include/gfx/seadProjection.h
@@ -26,8 +26,24 @@ public:
     virtual void doUpdateDeviceMatrix(Matrix44f*, const Matrix44f&, Graphics::DevicePosture) const;
     virtual void doScreenPosToCameraPosTo(Vector3f*, const Vector3f&) const = 0;
 
-    void updateMatrixImpl_() const;
-    const Matrix44f& getDeviceProjectionMatrix() const;
+    void updateMatrixImpl_() const {
+        if (mDirty) {
+            doUpdateMatrix(const_cast<Matrix44f*>(&mMatrix));
+            mDirty = false;
+
+            mDeviceDirty = true;
+            doUpdateDeviceMatrix(const_cast<Matrix44f*>(&mDeviceMatrix), mMatrix, mDevicePosture);
+            mDeviceDirty = false;
+        }
+        else if (mDeviceDirty) {
+            doUpdateDeviceMatrix(const_cast<Matrix44f*>(&mDeviceMatrix), mMatrix, mDevicePosture);
+            mDeviceDirty = false;
+        }
+    }
+    const Matrix44f& getDeviceProjectionMatrix() const {
+        updateMatrixImpl_();
+        return mDeviceMatrix;
+    }
 
 private:
     mutable bool mDirty;
